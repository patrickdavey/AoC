defmodule AOCRRunnerTest do
  use ExUnit.Case
  alias AOC.{Parser, Runner}

  test "first sample works" do
    input = """
    .#..#
    .....
    #####
    ....#
    ...##
    """

    parsed = Parser.parse(input)
    assert(Runner.part_1(parsed) == 8)
  end

  test "second sample works" do
    input = """
    ......#.#.
    #..#.#....
    ..#######.
    .#.#.###..
    .#..#.....
    ..#....#.#
    #..#....#.
    .##.#..###
    ##...#..#.
    .#....####
    """

    parsed = Parser.parse(input)
    assert(Runner.part_1(parsed) == 33)
  end

  test "third sample works" do
    input = """
    #.#...#.#.
    .###....#.
    .#....#...
    ##.#.#.#.#
    ....#.#.#.
    .##..###.#
    ..#...##..
    ..##....##
    ......#...
    .####.###.
    """

    parsed = Parser.parse(input)
    assert(Runner.part_1(parsed) == 35)
  end

  test "large sample works" do
    input = """
    .#..##.###...#######
    ##.############..##.
    .#.######.########.#
    .###.#######.####.#.
    #####.##.#.##.###.##
    ..#####..#.#########
    ####################
    #.####....###.#.#.##
    ##.#################
    #####.##.###..####..
    ..######..##.#######
    ####.##.####...##..#
    .#####..#.######.###
    ##...#.##########...
    #.##########.#######
    .####.#.###.###.#.##
    ....##.##.###..#####
    .#.#.###########.###
    #.#.#.#####.####.###
    ###.##.####.##.#..##
    """
    parsed = Parser.parse(input)
    assert(Runner.part_1(parsed) == 210)
  end

  test "large sample works part 2" do
    input = """
    .#..##.###...#######
    ##.############..##.
    .#.######.########.#
    .###.#######.####.#.
    #####.##.#.##.###.##
    ..#####..#.#########
    ####################
    #.####....###.#.#.##
    ##.#################
    #####.##.###..####..
    ..######..##.#######
    ####.##.####...##..#
    .#####..#.######.###
    ##...#.##########...
    #.##########.#######
    .####.#.###.###.#.##
    ....##.##.###..#####
    .#.#.###########.###
    #.#.#.#####.####.###
    ###.##.####.##.#..##
    """
    parsed = Parser.parse(input)
    assert(Runner.part_2(parsed) == 802)
  end
end
